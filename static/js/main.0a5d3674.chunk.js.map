{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","setActiveTodo","activeTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","status","changeStatus","searchInput","changeInput","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","user","setUser","userId","useEffect","getUser","userFromServer","href","email","name","App","allTodos","setAllTodos","setStatus","setSearchInput","visibleTodos","useMemo","filter","statusFilter","inputFilter","toLowerCase","includes","trim","handleClose","useCallback","newStatus","newInput","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a5d3674.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  setActiveTodo: (todo: Todo) => void;\n  activeTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    setActiveTodo,\n    activeTodo,\n  } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo: Todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': todo.id === activeTodo?.id },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !todo.completed },\n                  { 'has-text-success': todo.completed },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setActiveTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    { 'far fa-eye-slash': todo.id === activeTodo?.id },\n                    { 'far fa-eye': todo.id !== activeTodo?.id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\ninterface Props {\n  status: string,\n  searchInput: string,\n  changeStatus: (newStatus: string) => void,\n  changeInput: (newInput: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const {\n    status,\n    changeStatus,\n    searchInput,\n    changeInput,\n  } = props;\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(e) => {\n              changeStatus(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchInput}\n          onChange={(e) => {\n            changeInput(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchInput && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                changeInput('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  onClose: () => void;\n  activeTodo: Todo;\n}\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { onClose, activeTodo } = props;\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = activeTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userFromServer => setUser(userFromServer));\n  }, [activeTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}\"`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [activeTodo, setActiveTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState('all');\n  const [searchInput, setSearchInput] = useState('');\n\n  const changeStatus = (newStatus: string) => {\n    if (newStatus !== status) {\n      setStatus(newStatus);\n    }\n  };\n\n  const changeInput = (newInput: string) => {\n    if (newInput !== searchInput) {\n      setSearchInput(newInput);\n    }\n  };\n\n  const visibleTodos = useMemo(() => {\n    return allTodos.filter((todo: Todo) => {\n      let statusFilter = true;\n      let inputFilter = true;\n\n      if (status === 'active') {\n        statusFilter = todo.completed === false;\n      }\n\n      if (status === 'completed') {\n        statusFilter = todo.completed === true;\n      }\n\n      if (searchInput !== '') {\n        inputFilter = (\n          todo.title.toLowerCase().includes(searchInput.toLowerCase().trim())\n        );\n      }\n\n      return inputFilter && statusFilter;\n    });\n  }, [status, searchInput, allTodos]);\n\n  const handleClose = useCallback(() => {\n    return setActiveTodo(null);\n  }, []);\n\n  useEffect(() => {\n    getTodos().then(todos => {\n      setAllTodos(todos);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchInput={searchInput}\n                status={status}\n                changeStatus={changeStatus}\n                changeInput={changeInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {allTodos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    setActiveTodo={setActiveTodo}\n                    activeTodo={activeTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {activeTodo && (\n        <TodoModal\n          activeTodo={activeTodo}\n          onClose={handleClose}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}